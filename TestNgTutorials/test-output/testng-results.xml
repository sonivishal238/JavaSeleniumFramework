<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="31" passed="27" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-07T16:44:00 IST" name="Default suite" finished-at="2023-10-07T16:44:01 IST" duration-ms="352">
    <groups>
      <group name="Sanity">
        <method signature="AnnotationsDemo.sanityTest1()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" name="sanityTest1" class="annotationslearning.AnnotationsDemo"/>
        <method signature="AnnotationsDemo.sanityTest2()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" name="sanityTest2" class="annotationslearning.AnnotationsDemo"/>
        <method signature="AnnotationsDemo.sanityTest3()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" name="sanityTest3" class="annotationslearning.AnnotationsDemo"/>
      </group> <!-- Sanity -->
      <group name="Smoke">
        <method signature="Attribute_GroupsTest.smokeTest1()[pri:0, instance:introduction.Attribute_GroupsTest@dbf57b3]" name="smokeTest1" class="introduction.Attribute_GroupsTest"/>
        <method signature="Attribute_GroupsTest.smokeTest2()[pri:0, instance:introduction.Attribute_GroupsTest@dbf57b3]" name="smokeTest2" class="introduction.Attribute_GroupsTest"/>
        <method signature="Attribute_GroupsTest.smokeTest3()[pri:0, instance:introduction.Attribute_GroupsTest@dbf57b3]" name="smokeTest3" class="introduction.Attribute_GroupsTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-10-07T16:44:00 IST" name="Default test" finished-at="2023-10-07T16:44:01 IST" duration-ms="352">
      <class name="annotationslearning.AnnotationsDemo">
        <test-method is-config="true" signature="RunBeforeSuite()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="RunBeforeSuite" finished-at="2023-10-07T16:44:00 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RunBeforeSuite -->
        <test-method is-config="true" signature="beforeTheTestFolder()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="beforeTheTestFolder" finished-at="2023-10-07T16:44:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTheTestFolder -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="beforeClass" finished-at="2023-10-07T16:44:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="MultipleParams(java.lang.String,java.lang.String)[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="MultipleParams" finished-at="2023-10-07T16:44:00 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'firstName' is required by @Test on method MultipleParams but has not been marked @Optional or defined
in C:\Users\vishal.soni\AppData\Local\Temp\testng-eclipse-1316511019\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'firstName' is required by @Test on method MultipleParams but has not been marked @Optional or defined
in C:\Users\vishal.soni\AppData\Local\Temp\testng-eclipse-1316511019\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleParams -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="beforeEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="Test1()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="Test1" finished-at="2023-10-07T16:44:00 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="afterEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method signature="Test2()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="Test2" finished-at="2023-10-07T16:44:00 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="beforeEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="afterEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="beforeEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="sanityTest1()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="sanityTest1" finished-at="2023-10-07T16:44:00 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanityTest1 -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="afterEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="beforeEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="sanityTest2()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="sanityTest2" finished-at="2023-10-07T16:44:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanityTest2 -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="afterEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="beforeEveryMethod" finished-at="2023-10-07T16:44:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="sanityTest3()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:00 IST" name="sanityTest3" finished-at="2023-10-07T16:44:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanityTest3 -->
        <test-method is-config="true" signature="afterEveryMethod()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:01 IST" name="afterEveryMethod" finished-at="2023-10-07T16:44:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:01 IST" name="afterClass" finished-at="2023-10-07T16:44:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="AfterTheTestFolder()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:01 IST" name="AfterTheTestFolder" finished-at="2023-10-07T16:44:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTheTestFolder -->
        <test-method is-config="true" signature="RunAfterSuite()[pri:0, instance:annotationslearning.AnnotationsDemo@393671df]" started-at="2023-10-07T16:44:01 IST" name="RunAfterSuite" finished-at="2023-10-07T16:44:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RunAfterSuite -->
      </class> <!-- annotationslearning.AnnotationsDemo -->
      <class name="introduction.RegexSuiteForControllingTests">
        <test-method signature="exclude()[pri:0, instance:introduction.RegexSuiteForControllingTests@333291e3]" started-at="2023-10-07T16:44:01 IST" name="exclude" finished-at="2023-10-07T16:44:01 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exclude -->
        <test-method signature="runMe()[pri:0, instance:introduction.RegexSuiteForControllingTests@333291e3]" started-at="2023-10-07T16:44:01 IST" name="runMe" finished-at="2023-10-07T16:44:01 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runMe -->
        <test-method signature="runMe2()[pri:0, instance:introduction.RegexSuiteForControllingTests@333291e3]" started-at="2023-10-07T16:44:01 IST" name="runMe2" finished-at="2023-10-07T16:44:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runMe2 -->
        <test-method signature="runMe3()[pri:0, instance:introduction.RegexSuiteForControllingTests@333291e3]" started-at="2023-10-07T16:44:01 IST" name="runMe3" finished-at="2023-10-07T16:44:01 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runMe3 -->
      </class> <!-- introduction.RegexSuiteForControllingTests -->
      <class name="introduction.Attribute_EnabledTest">
        <test-method signature="b()[pri:0, instance:introduction.Attribute_EnabledTest@479d31f3]" started-at="2023-10-07T16:44:01 IST" name="b" finished-at="2023-10-07T16:44:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method signature="c()[pri:0, instance:introduction.Attribute_EnabledTest@479d31f3]" started-at="2023-10-07T16:44:01 IST" name="c" finished-at="2023-10-07T16:44:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c -->
      </class> <!-- introduction.Attribute_EnabledTest -->
      <class name="introduction.Attribute_TimeoutTest">
        <test-method signature="a()[pri:0, instance:introduction.Attribute_TimeoutTest@40ef3420]" started-at="2023-10-07T16:44:01 IST" name="a" finished-at="2023-10-07T16:44:01 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
      </class> <!-- introduction.Attribute_TimeoutTest -->
      <class name="introduction.Attribute_DependsOnDemo">
        <test-method signature="c()[pri:0, instance:introduction.Attribute_DependsOnDemo@402bba4f]" started-at="2023-10-07T16:44:01 IST" name="c" finished-at="2023-10-07T16:44:01 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c -->
        <test-method signature="b()[pri:0, instance:introduction.Attribute_DependsOnDemo@402bba4f]" started-at="2023-10-07T16:44:01 IST" name="b" finished-at="2023-10-07T16:44:01 IST" depends-on-methods="introduction.Attribute_DependsOnDemo.c" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method signature="a()[pri:0, instance:introduction.Attribute_DependsOnDemo@402bba4f]" started-at="2023-10-07T16:44:01 IST" name="a" finished-at="2023-10-07T16:44:01 IST" depends-on-methods="introduction.Attribute_DependsOnDemo.b" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
      </class> <!-- introduction.Attribute_DependsOnDemo -->
      <class name="introduction.Attribute_PriorityTest">
        <test-method signature="c()[pri:0, instance:introduction.Attribute_PriorityTest@795cd85e]" started-at="2023-10-07T16:44:01 IST" name="c" finished-at="2023-10-07T16:44:01 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c -->
        <test-method signature="b()[pri:0, instance:introduction.Attribute_PriorityTest@795cd85e]" started-at="2023-10-07T16:44:01 IST" name="b" finished-at="2023-10-07T16:44:01 IST" depends-on-methods="introduction.Attribute_PriorityTest.c" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method signature="a()[pri:0, instance:introduction.Attribute_PriorityTest@795cd85e]" started-at="2023-10-07T16:44:01 IST" name="a" finished-at="2023-10-07T16:44:01 IST" depends-on-methods="introduction.Attribute_PriorityTest.b" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
      </class> <!-- introduction.Attribute_PriorityTest -->
      <class name="introduction.IncludeOnlyDemo">
        <test-method signature="DoNotIncludeMe()[pri:0, instance:introduction.IncludeOnlyDemo@59fd97a8]" started-at="2023-10-07T16:44:01 IST" name="DoNotIncludeMe" finished-at="2023-10-07T16:44:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DoNotIncludeMe -->
        <test-method signature="includeMe()[pri:0, instance:introduction.IncludeOnlyDemo@59fd97a8]" started-at="2023-10-07T16:44:01 IST" name="includeMe" finished-at="2023-10-07T16:44:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- includeMe -->
      </class> <!-- introduction.IncludeOnlyDemo -->
      <class name="introduction.Attribute_DataProviderTest">
        <test-method signature="TestDataProvider(java.lang.String,java.lang.String)[pri:0, instance:introduction.Attribute_DataProviderTest@f5ac9e4]" started-at="2023-10-07T16:44:01 IST" name="TestDataProvider" data-provider="DataProvider" finished-at="2023-10-07T16:44:01 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[userName1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDataProvider -->
        <test-method signature="TestDataProvider(java.lang.String,java.lang.String)[pri:0, instance:introduction.Attribute_DataProviderTest@f5ac9e4]" started-at="2023-10-07T16:44:01 IST" name="TestDataProvider" data-provider="DataProvider" finished-at="2023-10-07T16:44:01 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[userName2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDataProvider -->
        <test-method signature="TestDataProvider(java.lang.String,java.lang.String)[pri:0, instance:introduction.Attribute_DataProviderTest@f5ac9e4]" started-at="2023-10-07T16:44:01 IST" name="TestDataProvider" data-provider="DataProvider" finished-at="2023-10-07T16:44:01 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[userName3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDataProvider -->
      </class> <!-- introduction.Attribute_DataProviderTest -->
      <class name="introduction.FirstTest">
        <test-method signature="firstTest()[pri:0, instance:introduction.FirstTest@123ef382]" started-at="2023-10-07T16:44:01 IST" name="firstTest" finished-at="2023-10-07T16:44:01 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstTest -->
      </class> <!-- introduction.FirstTest -->
      <class name="introduction.Attribute_GroupsTest">
        <test-method signature="smokeTest1()[pri:0, instance:introduction.Attribute_GroupsTest@dbf57b3]" started-at="2023-10-07T16:44:01 IST" name="smokeTest1" finished-at="2023-10-07T16:44:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest1 -->
        <test-method signature="smokeTest2()[pri:0, instance:introduction.Attribute_GroupsTest@dbf57b3]" started-at="2023-10-07T16:44:01 IST" name="smokeTest2" finished-at="2023-10-07T16:44:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest2 -->
        <test-method signature="smokeTest3()[pri:0, instance:introduction.Attribute_GroupsTest@dbf57b3]" started-at="2023-10-07T16:44:01 IST" name="smokeTest3" finished-at="2023-10-07T16:44:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest3 -->
      </class> <!-- introduction.Attribute_GroupsTest -->
      <class name="introduction.ParameteringTest">
        <test-method signature="test1(java.lang.String)[pri:0, instance:introduction.ParameteringTest@384ad17b]" started-at="2023-10-07T16:44:01 IST" name="test1" finished-at="2023-10-07T16:44:01 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'URL' is required by @Test on method test1 but has not been marked @Optional or defined
in C:\Users\vishal.soni\AppData\Local\Temp\testng-eclipse-1316511019\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'URL' is required by @Test on method test1 but has not been marked @Optional or defined
in C:\Users\vishal.soni\AppData\Local\Temp\testng-eclipse-1316511019\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2(java.lang.String,java.lang.String)[pri:0, instance:introduction.ParameteringTest@384ad17b]" started-at="2023-10-07T16:44:01 IST" name="test2" finished-at="2023-10-07T16:44:01 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'firstName' is required by @Test on method test2 but has not been marked @Optional or defined
in C:\Users\vishal.soni\AppData\Local\Temp\testng-eclipse-1316511019\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'firstName' is required by @Test on method test2 but has not been marked @Optional or defined
in C:\Users\vishal.soni\AppData\Local\Temp\testng-eclipse-1316511019\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- introduction.ParameteringTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
